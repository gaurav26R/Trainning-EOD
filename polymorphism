#polymophism
// Base class
class Animal {
    void makeSound() {
        System.out.println("Animal makes a sound");
    }
}

// Derived class
class Dog extends Animal {
    @Override
    void makeSound() {
        System.out.println("Dog barks");
    }
}

// Another derived class
class Cat extends Animal {
    @Override
    void makeSound() {
        System.out.println("Cat meows");
    }
}

// Main class to demonstrate polymorphism
public class PolymorphismExample {
    public static void main(String[] args) {
        // Creating objects of derived classes
        Animal myDog = new Dog();
        Animal myCat = new Cat();

        // Calling the overridden methods
        myDog.makeSound(); // Output: Dog barks
        myCat.makeSound(); // Output: Cat meows

        // Array of Animal type containing different derived class objects
        Animal[] animals = {myDog, myCat};

        // Using a loop to demonstrate polymorphism
        for (Animal animal : animals) {
            animal.makeSound();
        }
    }
}
 
